{"version":3,"file":"static/js/736.d787b115.chunk.js","mappings":"qQAEaA,EAAWC,EAAAA,GAAAA,IAAH,+CAGRC,EAAOD,EAAAA,GAAAA,GAAH,8DAIJE,EAAOF,EAAAA,GAAAA,GAAH,mF,SC8BjB,MAlCA,WACE,OAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,uGACyBC,EAAAA,EAAAA,IAAaH,GADtC,gBACUI,EADV,EACUA,KACRL,GAAU,OAAIK,IAFhB,4CADc,uBAAC,WAAD,wBAKdC,EACD,GAAE,CAACL,KAGF,SAACL,EAAD,UACGG,EAAOQ,KAAI,WAAwCC,GAAS,IAA9CC,EAA6C,EAA7CA,UAAWC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,GAC5C,OAAOJ,EAAM,IACX,UAACX,EAAD,YACE,SAACH,EAAD,CACEmB,IAAuB,OAAjBF,EAAA,yCAC4BA,GAAiB,GACnDG,IAAI,aAEN,wBAAKJ,KACL,0BACE,wCACA,0BAAOD,SATAG,GAYT,IACL,KAGN,C,+LCnCDG,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+FACQF,EAAAA,EAAAA,GAAM,+BAAD,OAAgCC,IAChDE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKC,OAAb,IAFL,0GAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,kFACQR,EAAAA,EAAAA,GAAM,wBAAD,OACQC,EADR,iCACwCO,EADxC,YAEhBL,MAAK,SAAAM,GAAI,OAAIA,EAAKJ,KAAKC,OAAd,IAHN,0GAMA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BxB,GAA/B,kFACQc,EAAAA,EAAAA,GAAM,SAAD,OACPd,EADO,oBACYe,EADZ,oBAEhBE,MAAM,SAAAM,GAAI,OAAIA,EAAKJ,IAAT,IAHP,0GAMA,SAAehB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BH,GAA5B,kFACQc,EAAAA,EAAAA,GAAM,SAAD,OACPd,EADO,4BACoBe,EADpB,oBAEhBE,MAAM,SAAAM,GAAI,OAAIA,EAAKJ,IAAT,IAHP,0GAMA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA+BzB,GAA/B,kFACQc,EAAAA,EAAAA,GAAM,SAAD,OACPd,EADO,4BACoBe,EADpB,oBAEhBE,MAAM,SAAAM,GAAI,OAAIA,EAAKJ,KAAKC,OAAd,IAHP,0G","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/fetchMovies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Portrait = styled.img`\n  /* width: 150px; */\n`;\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n`;\nexport const Item = styled.li`\n  margin-right: 20px;\n  display: block;\n  width: 150px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'services/fetchMovies';\nimport { Item, List, Portrait } from './Cast.styled';\n\nfunction Cast() {\n  const [actors, setActors] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getCast() {\n      const { cast } = await getMovieCast(movieId);\n      setActors([...cast]);\n    }\n    getCast();\n  }, [movieId]);\n\n  return (\n    <List>\n      {actors.map(({ character, name, profile_path, id }, idx) => {\n        return idx < 12 ? (\n          <Item key={id}>\n            <Portrait\n              src= {profile_path !== null\n            ? `https://image.tmdb.org/t/p/w200${profile_path}` : ''}\n              alt=\"portret\"\n            />\n            <h3>{name}</h3>\n            <p>\n              <b>Character: </b>\n              <span>{character}</span>\n            </p>\n          </Item>\n        ) : null;\n      })}\n    </List>\n  );\n}\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '3c255862ff74050ccdb5109073919cb8';\n\nexport async function getTrendMovies() {\n  return await axios(`trending/movie/week?api_key=${API_KEY}`\n  ).then(res => res.data.results);\n}\n\nexport async function getMoviesBySearch(query) {\n  return await axios(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1`\n  ).then(resp => resp.data.results);\n}\n\nexport async function getMovieDetails(movieId) {\n  return await axios(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  ).then (resp => resp.data);\n}\n\nexport async function getMovieCast(movieId) {\n  return await axios(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  ).then (resp => resp.data);\n}\n\nexport async function getMovieReviews(movieId) {\n  return await axios(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  ).then (resp => resp.data.results);\n}"],"names":["Portrait","styled","List","Item","useState","actors","setActors","movieId","useParams","useEffect","getMovieCast","cast","getCast","map","idx","character","name","profile_path","id","src","alt","axios","API_KEY","getTrendMovies","then","res","data","results","getMoviesBySearch","query","resp","getMovieDetails","getMovieReviews"],"sourceRoot":""}