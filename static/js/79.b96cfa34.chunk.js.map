{"version":3,"file":"static/js/79.b96cfa34.chunk.js","mappings":"6QAEaA,EAAQC,EAAAA,GAAAA,MAAH,2HAMLC,EAAYD,EAAAA,GAAAA,OAAH,uKAUTE,EAAOF,EAAAA,GAAAA,KAAH,0CAGJG,EAAWH,EAAAA,GAAAA,GAAH,+C,SCkCrB,MAlDA,WAAuB,IAAD,EACpB,GAA0CI,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GACrCC,GAAWC,EAAAA,EAAAA,MAmBjB,OAjBAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,qGACwBC,EAAAA,EAAAA,IAAkBL,GAD1C,OACQM,EADR,OAEEV,GAAiB,OAAIU,IAFvB,4CAFc,sBACA,KAAVN,GADU,mCAOdO,EACD,GAAE,CAACP,KAUF,iCACE,2CACA,UAACR,EAAD,CAAMgB,SAVV,SAAkBC,GAChBA,EAAEC,iBAEF,IAAMC,EAAcF,EAAEG,OAAOC,SAASb,MAAMc,MAC5Cf,EAAgB,CAAEC,MAAOW,GAC1B,EAKG,WACE,SAACtB,EAAD,CACE0B,KAAK,QACLC,KAAK,OACLC,YAAY,sBACZC,UAAQ,KAEV,SAAC3B,EAAD,CAAWyB,KAAK,SAAhB,uBAEDhB,IACC,wBACGL,EAAcwB,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACjB,SAAC5B,EAAD,WACE,SAAC,KAAD,CAAM6B,GAAE,UAAKD,GAAME,MAAO,CAAEC,KAAMtB,GAAlC,SACGkB,KAFUC,EADE,QAW5B,C,+LCnDDI,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+FACQF,EAAAA,EAAAA,GAAM,+BAAD,OAAgCC,IAChDE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKxB,OAAb,IAFL,0GAKA,SAAeD,EAAtB,+CAAO,OAAP,oBAAO,WAAiCL,GAAjC,kFACQyB,EAAAA,EAAAA,GAAM,wBAAD,OACQC,EADR,iCACwC1B,EADxC,YAEhB4B,MAAK,SAAAG,GAAI,OAAIA,EAAKD,KAAKxB,OAAd,IAHN,0GAMA,SAAe0B,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,kFACQR,EAAAA,EAAAA,GAAM,SAAD,OACPQ,EADO,oBACYP,EADZ,oBAEhBE,MAAM,SAAAG,GAAI,OAAIA,EAAKD,IAAT,IAHP,0GAMA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,kFACQR,EAAAA,EAAAA,GAAM,SAAD,OACPQ,EADO,4BACoBP,EADpB,oBAEhBE,MAAM,SAAAG,GAAI,OAAIA,EAAKD,IAAT,IAHP,0GAMA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,kFACQR,EAAAA,EAAAA,GAAM,SAAD,OACPQ,EADO,4BACoBP,EADpB,oBAEhBE,MAAM,SAAAG,GAAI,OAAIA,EAAKD,KAAKxB,OAAd,IAHP,0G","sources":["Pages/MoviesPage.styled.jsx","Pages/MoviesPage.jsx","services/fetchMovies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Input = styled.input`\n  padding: 10px 20px;\n  font-size: 18px;\n  border: 1px solid blueviolet;\n  border-right: none;\n`;\nexport const SearchBtn = styled.button`\n  height: 45px;\n  cursor: pointer;\n  border: 1px solid blueviolet;\n\n  :hover {\n    color: white;\n    background-color: blueviolet;\n  }\n`;\nexport const Form = styled.form`\n  display: flex;\n`;\nexport const ListItem = styled.li`\n  margin-bottom: 5px;\n`;\n","import { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMoviesBySearch } from 'services/fetchMovies';\nimport { Input, SearchBtn, Form, ListItem } from './MoviesPage.styled';\n\nfunction MoviesPage() {\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    if (query === '') return;\n    async function getMovies() {\n      const results = await getMoviesBySearch(query);\n      setSearchResults([...results]);\n    }\n\n    getMovies();\n  }, [query]);\n\n  function onSearch(e) {\n    e.preventDefault();\n\n    const searchQuery = e.target.elements.query.value;\n    setSearchParams({ query: searchQuery });\n  }\n\n  return (\n    <>\n      <h2>Movie finder:</h2>\n      <Form onSubmit={onSearch}>\n        <Input\n          name=\"query\"\n          type=\"text\"\n          placeholder=\"Enter name of movie\"\n          required\n        />\n        <SearchBtn type=\"submit\">Search</SearchBtn>\n      </Form>\n      {query && (\n        <ul>\n          {searchResults.map(({ title, id }) => (\n            <ListItem key={id}>\n              <Link to={`${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </ListItem>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n\nexport default MoviesPage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '3c255862ff74050ccdb5109073919cb8';\n\nexport async function getTrendMovies() {\n  return await axios(`trending/movie/week?api_key=${API_KEY}`\n  ).then(res => res.data.results);\n}\n\nexport async function getMoviesBySearch(query) {\n  return await axios(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1`\n  ).then(resp => resp.data.results);\n}\n\nexport async function getMovieDetails(movieId) {\n  return await axios(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  ).then (resp => resp.data);\n}\n\nexport async function getMovieCast(movieId) {\n  return await axios(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  ).then (resp => resp.data);\n}\n\nexport async function getMovieReviews(movieId) {\n  return await axios(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  ).then (resp => resp.data.results);\n}"],"names":["Input","styled","SearchBtn","Form","ListItem","useState","searchResults","setSearchResults","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","getMoviesBySearch","results","getMovies","onSubmit","e","preventDefault","searchQuery","target","elements","value","name","type","placeholder","required","map","title","id","to","state","from","axios","API_KEY","getTrendMovies","then","res","data","resp","getMovieDetails","movieId","getMovieCast","getMovieReviews"],"sourceRoot":""}