{"version":3,"file":"static/js/374.13f66872.chunk.js","mappings":"mQAEaA,EAASC,EAAAA,GAAAA,GAAH,6CAGNC,EAAaD,EAAAA,GAAAA,EAAH,yF,SCgCvB,MAhCA,WACE,OAA4BE,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,IARAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACyBC,EAAAA,EAAAA,IAAgBH,GADzC,OACQI,EADR,OAEEL,GAAU,OAAIK,IAFhB,4CADc,uBAAC,WAAD,wBAKdC,EACD,GAAE,CAACL,IAECF,EAEL,OACE,8BACKA,EAAOQ,QACR,wBACGR,EAAOS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,2BACE,SAAChB,EAAD,UAASe,KACT,SAACb,EAAD,UAAac,MAFNF,EADC,OAQd,4DAIP,C,+LCjCDG,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+FACQF,EAAAA,EAAAA,GAAM,+BAAD,OAAgCC,IAChDE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKC,OAAb,IAFL,0GAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,kFACQR,EAAAA,EAAAA,GAAM,wBAAD,OACQC,EADR,iCACwCO,EADxC,YAEhBL,MAAK,SAAAM,GAAI,OAAIA,EAAKJ,KAAKC,OAAd,IAHN,0GAMA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BrB,GAA/B,kFACQW,EAAAA,EAAAA,GAAM,SAAD,OACPX,EADO,oBACYY,EADZ,oBAEhBE,MAAM,SAAAM,GAAI,OAAIA,EAAKJ,IAAT,IAHP,0GAMA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA4BtB,GAA5B,kFACQW,EAAAA,EAAAA,GAAM,SAAD,OACPX,EADO,4BACoBY,EADpB,oBAEhBE,MAAM,SAAAM,GAAI,OAAIA,EAAKJ,IAAT,IAHP,0GAMA,SAAeb,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,kFACQW,EAAAA,EAAAA,GAAM,SAAD,OACPX,EADO,4BACoBY,EADpB,oBAEhBE,MAAM,SAAAM,GAAI,OAAIA,EAAKJ,KAAKC,OAAd,IAHP,0G","sources":["components/Reviews/Review.styled.jsx","components/Reviews/Review.jsx","services/fetchMovies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Author = styled.h3`\n  margin-top: 30px;\n`;\nexport const RewiewText = styled.p`\n  padding-bottom: 30px;\n  border-bottom: 1px solid blueviolet;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/fetchMovies';\nimport { Author, RewiewText } from './Review.styled';\n\nfunction Reviews() {\n  const [review, setReview] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getCast() {\n      const response = await getMovieReviews(movieId);\n      setReview([...response]);\n    }\n    getCast();\n  }, [movieId]);\n\n  if (!review) return;\n\n  return (\n    <>\n      {!!review.length ? (\n        <ul>\n          {review.map(({ id, author, content }) => (\n            <li key={id}>\n              <Author>{author}</Author>\n              <RewiewText>{content}</RewiewText>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <div>There's no review added yet :</div>\n      )}\n    </>\n  );\n}\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '3c255862ff74050ccdb5109073919cb8';\n\nexport async function getTrendMovies() {\n  return await axios(`trending/movie/week?api_key=${API_KEY}`\n  ).then(res => res.data.results);\n}\n\nexport async function getMoviesBySearch(query) {\n  return await axios(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1`\n  ).then(resp => resp.data.results);\n}\n\nexport async function getMovieDetails(movieId) {\n  return await axios(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  ).then (resp => resp.data);\n}\n\nexport async function getMovieCast(movieId) {\n  return await axios(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  ).then (resp => resp.data);\n}\n\nexport async function getMovieReviews(movieId) {\n  return await axios(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  ).then (resp => resp.data.results);\n}"],"names":["Author","styled","RewiewText","useState","review","setReview","movieId","useParams","useEffect","getMovieReviews","response","getCast","length","map","id","author","content","axios","API_KEY","getTrendMovies","then","res","data","results","getMoviesBySearch","query","resp","getMovieDetails","getMovieCast"],"sourceRoot":""}